// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import (
	"bytes"
	"encoding/json"
	"strings"
	"text/template"

	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/products": {
            "get": {
                "description": "Method return product with specific SKU, if related parameter is specified else similarly with Id.\nIf both of parameters aren't specified return all products or group of them, if groupSize and groupNum params are specified",
                "summary": "get product with specific SKU or Id with it in URL params or all of the products, or part of them",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SKU of searching product",
                        "name": "sku",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Id of searching product",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Size of requesting products group",
                        "name": "groupSize",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of requesting products group",
                        "name": "groupNum",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Product"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Product with specified SKU or Id not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "summary": "update product with specific SKU or Id with it in URL params",
                "parameters": [
                    {
                        "description": "new product",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InputProduct"
                        }
                    },
                    {
                        "type": "string",
                        "description": "SKU of updating product",
                        "name": "sku",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Id of updating product",
                        "name": "id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "new product",
                        "schema": {
                            "$ref": "#/definitions/Product"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "summary": "add new product",
                "parameters": [
                    {
                        "description": "adding product",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InputProduct"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "added product",
                        "schema": {
                            "$ref": "#/definitions/Product"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Method delete product with specific SKU, if related parameter is specified else similarly with Id.",
                "summary": "delete product with specific SKU or Id with it in URL params",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SKU of deleting product",
                        "name": "sku",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Id of deleting product",
                        "name": "id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Product with specified SKU or Id not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "head": {
                "summary": "return headers as similar get request",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SKU of searching product",
                        "name": "sku",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Id of searching product",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Size of requesting products group",
                        "name": "groupSize",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of requesting products group",
                        "name": "groupNum",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/products/{SKU}": {
            "get": {
                "summary": "get product with specific SKU with SKU in URL path",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SKU of searching product",
                        "name": "SKU",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Product"
                            }
                        }
                    },
                    "404": {
                        "description": "product with such SKU does not exist",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "summary": "update product with specific SKU with SKU in URL path",
                "parameters": [
                    {
                        "description": "new product",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InputProduct"
                        }
                    },
                    {
                        "type": "string",
                        "description": "SKU of updating product",
                        "name": "SKU",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "added product",
                        "schema": {
                            "$ref": "#/definitions/Product"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "summary": "delete product with specific SKU with SKU in URL path",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SKU of deleting product",
                        "name": "SKU",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "404": {
                        "description": "product with such SKU does not exist",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "head": {
                "summary": "return headers as similar get request",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SKU of searching product",
                        "name": "SKU",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        }
    },
    "definitions": {
        "InputProduct": {
            "type": "object",
            "properties": {
                "cost": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "sku": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "Product": {
            "type": "object",
            "properties": {
                "cost": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "sku": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "0.1",
	Host:        "localhost:8080",
	BasePath:    "/api/v1/",
	Schemes:     []string{},
	Title:       "almilukXsollaSchoolBE",
	Description: "This is a service for managing products on internet marketplace",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
